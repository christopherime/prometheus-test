version: '3.8'
networks:
  prometheus:
volumes:
  grafana-data:
services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./rules.yml:/etc/prometheus/rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-lifecycle'
    networks:
      - prometheus
    ports:
      - 9090:9090

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'      
    networks:
      - prometheus
    ports:
      - 9093:9093

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - prometheus
    ports:
      - 9100:9100

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - prometheus
    ports:
      - 9501:8080

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - 'grafana-data:/var/lib/grafana'
      - './config/grafana/provisioning:/etc/grafana/provisioning'
    environment:
      GF_RENDERING_SERVER_URL: http://renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      GF_LOG_FILTERS: rendering:debug
    networks:
      - prometheus
    ports:
      - 3000:3000

  renderer:
    image: grafana/grafana-image-renderer:latest
    volumes:
      - './config/grafana/render/config.json:/usr/src/app/config.json'
    networks:
      - prometheus
    ports:
      - 8081
